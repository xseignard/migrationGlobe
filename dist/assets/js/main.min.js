"use strict";!function(){var e={};e.noopVertex="\n		varying vec2 vUv;\n\n		void main() {\n			vUv = uv;\n			gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n		}\n	",e.fluxFragment="\n		uniform vec3 color;\n		uniform sampler2D texture;\n		uniform float displacement;\n		varying vec2 vUv;\n\n		void main() {\n			vec4 texColor = texture2D(texture, vec2(vUv.x+displacement, vUv.y));\n			gl_FragColor = texColor*vec4(color,1.0);\n		}\n	",e.globeFragment="\n		uniform sampler2D worldMap;\n		uniform sampler2D bordersMap;\n		uniform sampler2D continentsMap;\n		uniform sampler2D indexMap;\n		uniform float clicked;\n		uniform vec3 borderColor;\n		uniform vec3 clickColor;\n		uniform vec3 countryColor;\n		varying vec2 vUv;\n\n		void main() {\n			vec4 borders = texture2D(bordersMap, vUv) * vec4(borderColor, 1.0);\n			vec4 world = texture2D(worldMap, vUv) * 2.0;\n			vec4 continents = texture2D(continentsMap, vUv) / 5.0;\n			vec4 index = texture2D(indexMap, vUv);\n			vec4 globeCol = vec4(countryColor, 1.0);\n			if (abs(clicked-index.r)<0.0035 && clicked/index.r >0.0) {\n				globeCol = vec4(clickColor,0.7);\n			}\n			float r = globeCol.r*world.r + borders.r + continents.r;\n			float g = globeCol.g*world.g + borders.g + continents.g;\n			float b = globeCol.b*world.b + borders.b + continents.b;\n			gl_FragColor = vec4(r,g,b,1.0);\n		}\n	",window.Shaders=e}(),function(){var e={};e.xyzToLatLon=function(e,t){var n=90-180*Math.acos(e.y/t.geometry.radius)/Math.PI,o=(270+180*Math.atan2(e.x,e.z)/Math.PI)%360;return o>=180&&(o-=360),{lat:n,lon:o}},e.latLonToXyz=function(e,t,n){var o=e*Math.PI/180,r=t*Math.PI/180,a=new THREE.Vector3;return a.x=n.geometry.radius*Math.cos(o)*Math.cos(r),a.y=n.geometry.radius*Math.sin(o),a.z=-n.geometry.radius*Math.cos(o)*Math.sin(r),a.add(n.position),a},e.getIndex=function(t,n,o){var r=new Image;r.src="assets/img/indexed_map.png",r.onload=function(){var a=e.xyzToLatLon(t,n),i=Math.floor(a.lon/360*r.width+r.width/2),l=Math.floor(-a.lat/360*r.width+r.height/2);i>r.width&&(i-=r.width),l>r.height&&(l-=r.height);var s=document.createElement("canvas");s.width=r.width,s.height=r.height,s.getContext("2d").drawImage(r,0,0,r.width,r.height);var d=s.getContext("2d").getImageData(i,l,1,1).data;o(d[0])}},e.getCountryCodeFromIndex=function(e,t){var n=new XMLHttpRequest;n.open("GET","assets/data/newInflows.json",!0),n.onreadystatechange=function(){if(4===n.readyState&&200===n.status){var o=JSON.parse(n.responseText);o.forEach(function(n){n.index===e&&t(n)})}},e>0?n.send(null):t(null)},window.GeoUtils=e}(),function(){var e=function(e){e=e||{};var t,n=e.radius||200,o=e.widthSegments||40,r=e.heightSegments||30;if(e.material)t=e.material;else{var a=e.texture||"assets/img/world_4k_bw.png",i=THREE.ImageUtils.loadTexture(a);t=new THREE.MeshBasicMaterial({map:i})}var l=new THREE.SphereGeometry(n,o,r),s=new THREE.Mesh(l,t);return s};window.Globe=e}(),function(){var e=function(e,t){this.mesh=e,this.numberOfPoints=t||50};e.prototype.quadraticFlux=function(e,t,n,o){var r=GeoUtils.latLonToXyz(e,t,this.mesh),a=GeoUtils.latLonToXyz(n,o,this.mesh),i=r.clone().sub(a).length(),l=r.clone().add(a).multiplyScalar(.5);l.sub(this.mesh.position),l.normalize(),l.multiplyScalar(this.mesh.geometry.radius+.7*i),l.add(this.mesh.position);var s=new THREE.QuadraticBezierCurve3(r,l,a),d=new THREE.CurvePath;d.add(s);var c=d.createPointsGeometry(this.numberOfPoints);return c},e.prototype.cubicFlux=function(e,t,n,o){var r=GeoUtils.latLonToXyz(e,t,this.mesh),a=GeoUtils.latLonToXyz(n,o,this.mesh),i=r.clone().sub(a).length(),l=r.clone().sub(this.mesh.position);l.normalize(),l.multiplyScalar(i),l.add(r);var s=a.clone().sub(this.mesh.position);s.normalize(),s.multiplyScalar(i),s.add(a);var d=new THREE.CubicBezierCurve3(r,l,s,a),c=new THREE.CurvePath;c.add(d);var u=c.createPointsGeometry(this.numberOfPoints);return u},e.prototype.doubleCubicFlux=function(e,t,n,o){var r=GeoUtils.latLonToXyz(e,t,this.mesh),a=GeoUtils.latLonToXyz(n,o,this.mesh),i=r.clone().sub(a).length(),l=r.clone().add(a).multiplyScalar(.5);l.sub(this.mesh.position),l.normalize(),l.multiplyScalar(this.mesh.geometry.radius+.2*i),l.add(this.mesh.position);var s=r.clone().sub(a);s.normalize();var d=l.clone().add(s.clone().multiplyScalar(i/2)),c=l.clone().add(s.clone().multiplyScalar(-i/2)),u=new THREE.CubicBezierCurve3(r,r,d,l),h=new THREE.CubicBezierCurve3(l,c,a,a),m=u.getPoints(this.numberOfPoints/2);m=m.splice(0,m.length-1),m=m.concat(h.getPoints(this.numberOfPoints/2));var p=new THREE.Geometry;return p.vertices=m,p},e.prototype.ThreeDFlux=function(e,t,n,o){var r=this.doubleCubicFlux(e,t,n,o).vertices,a=[];a[0]=r[0];var i=[],l=r[0],s=r[r.length-1],d=this.mesh.position,c=l.clone().sub(s).length(),u=l.clone().sub(s),h=s.clone().sub(d),m=u.cross(h);m.normalize();for(var p=1;p<r.length-1;p++){var v=r[p],E=p<r.length/2?p:r.length-p,g=v.clone().add(m.clone().multiplyScalar(E*c/this.mesh.geometry.radius)),w=v.clone().add(m.clone().multiplyScalar(-E*c/this.mesh.geometry.radius));if(a.push(g),a.push(w),a.length<=3){var f=new THREE.Face3(0,1,2);i.push(f)}else{var T=new THREE.Face3(2*p,2*p-1,2*p-2),y=new THREE.Face3(2*p-1,2*p-2,2*p-3);i.push(T),i.push(y)}}a.push(r[r.length-1]);var b=new THREE.Face3(a.length-1,a.length-2,a.length-3);i.push(b);var C=new THREE.Geometry;return C.vertices=a,C.faces=i,C},window.Flux=e}(),function(){function e(){u=document.getElementById("container"),w=window.innerWidth,f=window.innerHeight,v=new THREE.Scene,v.fog=new THREE.Fog(1118481,1800,2e3),m=new THREE.PerspectiveCamera(45,w/f,1,2e3),m.position.z=1500,m.lookAt(v.position),p=new THREE.OrbitControls(m),p.minDistance=500,p.maxDistance=2e3,p.addEventListener("change",i),h=new Stats,document.body.appendChild(h.domElement);var e=new dat.GUI;e.add(R,"speed",.001,.03),e.addColor(R,"fluxColor"),e.addColor(R,"clickColor"),e.addColor(R,"countryColor"),e.addColor(R,"borderColor"),E=new THREE.WebGLRenderer({antialias:!0}),E.setSize(w,f),E.domElement.style.position="absolute",u.appendChild(E.domElement),window.addEventListener("resize",t,!1),document.addEventListener("mouseup",o,!1),document.addEventListener("mousedown",n,!1);var r=THREE.ImageUtils.loadTexture("assets/img/world_4k_bw.png"),a=THREE.ImageUtils.loadTexture("assets/img/borders_map.png"),b=THREE.ImageUtils.loadTexture("assets/img/continents_map.png"),C=THREE.ImageUtils.loadTexture("assets/img/indexed_map.png");C.magFilter=THREE.NearestFilter,C.minFilter=THREE.NearestFilter,T={worldMap:{type:"t",value:r},bordersMap:{type:"t",value:a},continentsMap:{type:"t",value:b},indexMap:{type:"t",value:C},clicked:{type:"f",value:0},clickColor:{type:"c",value:new THREE.Color(16711680)},countryColor:{type:"c",value:new THREE.Color(16711680)},borderColor:{type:"c",value:new THREE.Color(16711680)}};var x=new THREE.ShaderMaterial({uniforms:T,vertexShader:Shaders.noopVertex,fragmentShader:Shaders.globeFragment});g=new Globe({radius:400,material:x}),v.add(g);var H=50;s=new Flux(g,H),c=new THREE.MeshBasicMaterial,c.side=THREE.DoubleSide;var M=THREE.ImageUtils.loadTexture("assets/img/texture.16.png");M.wrapS=THREE.RepeatWrapping,M.wrapT=THREE.RepeatWrapping,y={color:{type:"c",value:new THREE.Color(16711680)},texture:{type:"t",value:M},displacement:{type:"f",value:0}},d=new THREE.ShaderMaterial({uniforms:y,vertexShader:Shaders.noopVertex,fragmentShader:Shaders.fluxFragment,blending:THREE.AdditiveBlending,depthTest:!0,depthWrite:!1,transparent:!0});var S=new XMLHttpRequest;S.open("GET","assets/data/capitals.json",!0),S.onreadystatechange=function(){4===S.readyState&&200===S.status&&(l=JSON.parse(S.responseText))},S.send(null)}function t(){m.aspect=window.innerWidth/window.innerHeight,m.updateProjectionMatrix(),E.setSize(window.innerWidth,window.innerHeight),i()}function n(e){b=e.clientX,C=e.clientY}function o(e){if(!(Math.abs(b-e.clientX)>3&&Math.abs(C-e.clientY)>3)){var t=E.context,n=e.clientX/t.canvas.clientWidth*2-1,o=2*-(e.clientY/t.canvas.clientHeight)+1,a=new THREE.Vector3(n,o,m.near),i=new THREE.Projector;i.unprojectVector(a,m);var l=new THREE.Raycaster(m.position,a.sub(m.position).normalize()),d=l.intersectObject(g,!0);if(d.length>0){var u=d[0].point;GeoUtils.getIndex(u,g,function(e){T.clicked.value=e/255,GeoUtils.getCountryCodeFromIndex(e,function(e){if(e){r(u),console.log(e),v.remove(t);var t=s.ThreeDFlux(x.latitude,x.longitude,e.latitude,e.longitude);t=new THREE.Mesh(t,c),v.add(t)}})})}}}function r(e){var t=(new THREE.Vector3).subVectors(m.position,g.position).length(),n=e.multiplyScalar(t/g.geometry.radius),o=m.position.clone(),r=new TWEEN.Tween(o).to(n,500);r.easing(TWEEN.Easing.Quadratic.InOut),r.onUpdate(function(){m.position=o.clone().sub(g.position).normalize().multiplyScalar(t)}),r.start()}function a(){requestAnimationFrame(a),i(),h.update(),p.update(),TWEEN.update()}function i(){y.displacement.value+=R.speed,y.color.value=new THREE.Color(R.fluxColor),T.clickColor.value=new THREE.Color(R.clickColor),T.countryColor.value=new THREE.Color(R.countryColor),T.borderColor.value=new THREE.Color(R.borderColor),E.render(v,m)}Detector.webgl||Detector.addGetWebGLMessage();var l,s,d,c,u,h,m,p,v,E,g,w,f,T,y,b,C,x={latitude:47.21176,longitude:-1.573},H=function(){this.speed=.004,this.fluxColor="#913113",this.clickColor="#464ea2",this.countryColor="#242ec5",this.borderColor="#2237ff"},R=new H;e(),a()}();